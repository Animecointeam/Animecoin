

#include <QtGlobal>

// Automatically generated by extract_strings.py
#ifdef __GNUC__
#define UNUSED __attribute__((unused))
#else
#define UNUSED
#endif
static const char UNUSED *bitcoin_strings[] = {
    QT_TRANSLATE_NOOP("anime-core", ""
    "Accept relayed transactions received from whitelisted peers even when not "
    "relaying transactions (default: %d)"),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Allow JSON-RPC connections from specified source. Valid for <ip> are a "
    "single IP (e.g. 1.2.3.4), a network/netmask (e.g. 1.2.3.4/255.255.255.0) or "
    "a network/CIDR (e.g. 1.2.3.4/24). This option can be specified multiple times"),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Bind to given address and always listen on it. Use [host]:port notation for "
    "IPv6"),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Bind to given address and whitelist peers connecting to it. Use [host]:port "
    "notation for IPv6"),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Bind to given address to listen for JSON-RPC connections. Use [host]:port "
    "notation for IPv6. This option can be specified multiple times (default: "
    "bind to all interfaces)"),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Cannot obtain a lock on data directory %s. Bitcoin Core is probably already "
    "running."),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Could not locate RPC credentials. No authentication cookie could be found, "
    "and no rpcpassword is set in the configuration file (%s)"),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Create new files with system default permissions, instead of umask 077 (only "
    "effective with disabled wallet functionality)"),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Discover own IP addresses (default: 1 when listening and no -externalip or -"
    "proxy)"),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Distributed under the MIT software license, see the accompanying file "
    "COPYING or <http://www.opensource.org/licenses/mit-license.php>."),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Do not keep transactions in the mempool longer than <n> hours (default: %u)"),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Error: Listening for incoming connections failed (listen returned error %s)"),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Error: Unsupported argument -socks found. Setting SOCKS version isn't "
    "possible anymore, only SOCKS5 proxies are supported."),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Execute command when a relevant alert is received or we see a really long "
    "fork (%s in cmd is replaced by message)"),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Execute command when the best block changes (%s in cmd is replaced by block "
    "hash)"),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Fees (in %s/kB) smaller than this are considered zero fee for relaying, "
    "mining and transaction creation (default: %s)"),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Force relay of transactions from whitelisted peers even they violate local "
    "relay policy (default: %d)"),
    QT_TRANSLATE_NOOP("anime-core", ""
    "How thorough the block verification of -checkblocks is (0-4, default: %u)"),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Maintain a full transaction index, used by the getrawtransaction rpc call "
    "(default: %u)"),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Maximum size of data in data carrier transactions we relay and mine "
    "(default: %u)"),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Maximum total fees (in %s) to use in a single wallet transaction or raw "
    "transaction; setting this too low may abort large transactions (default: %s)"),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Number of seconds to keep misbehaving peers from reconnecting (default: %u)"),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Output debugging information (default: %u, supplying <category> is optional)"),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Output only the hex-encoded transaction id of the resultant transaction."),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Prune configured below the minimum of %d MiB.  Please use a higher number."),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Query for peer addresses via DNS lookup, if low on addresses (default: 1 "
    "unless -connect)"),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Randomize credentials for every proxy connection. This enables Tor stream "
    "isolation (default: %u)"),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Read extra arguments from standard input, one per line until EOF/Ctrl-D "
    "(recommended for sensitive information such as passphrases)"),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Reduce storage requirements by pruning (deleting) old blocks. This mode "
    "disables wallet support and is incompatible with -txindex. Warning: "
    "Reverting this setting requires re-downloading the entire blockchain. "
    "(default: 0 = disable pruning blocks, >%u = target size in MiB to use for "
    "block files)"),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Rescans are not possible in pruned mode. You will need to use -reindex which "
    "will download the whole blockchain again."),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Set maximum size of high-priority/low-fee transactions in bytes (default: %d)"),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Set the number of script verification threads (%u to %d, 0 = auto, <0 = "
    "leave that many cores free, default: %d)"),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Set the number of threads for coin generation if enabled (-1 = all cores, "
    "default: %d)"),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Support filtering of blocks and transaction with bloom filters (default: %u)"),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Tell other nodes to filter invs to us by our mempool min fee (default: %u)"),
    QT_TRANSLATE_NOOP("anime-core", ""
    "This is a pre-release test build - use at your own risk - do not use for "
    "mining or merchant applications"),
    QT_TRANSLATE_NOOP("anime-core", ""
    "This product includes software developed by the OpenSSL Project for use in "
    "the OpenSSL Toolkit <https://www.openssl.org/> and cryptographic software "
    "written by Eric Young and UPnP software written by Thomas Bernard."),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Tries to keep outbound traffic under the given target (in MiB per 24h), 0 = "
    "no limit (default: %d)"),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Unable to bind to %s on this computer. Animecoin is probably already running."),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Unsupported argument -whitelistalwaysrelay ignored, use -whitelistrelay and/"
    "or -whitelistforcerelay."),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Use UPnP to map the listening port (default: 1 when listening and no -proxy)"),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Use separate SOCKS5 proxy to reach peers via Tor hidden services (default: "
    "%s)"),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Username and hashed password for JSON-RPC connections. The field <userpw> "
    "comes in the format: <USERNAME>:<SALT>$<HASH>. A canonical python script is "
    "included in share/rpcuser. This option can be specified multiple times"),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Warning: Please check that your computer's date and time are correct! If "
    "your clock is wrong Quark Core will not work properly."),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Warning: The network does not appear to fully agree! Some miners appear to "
    "be experiencing issues."),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Warning: We do not appear to fully agree with our peers! You may need to "
    "upgrade, or other nodes may need to upgrade."),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Whitelist peers connecting from the given netmask or IP address. Can be "
    "specified multiple times."),
    QT_TRANSLATE_NOOP("anime-core", ""
    "Whitelisted peers cannot be DoS banned and their transactions are always "
    "relayed, even if they are already in the mempool, useful e.g. for a gateway"),
    QT_TRANSLATE_NOOP("anime-core", ""
    "You need to rebuild the database using -reindex to go back to unpruned "
    "mode.  This will redownload the entire blockchain"),
    QT_TRANSLATE_NOOP("anime-core", ""
    "You need to rebuild the database using -reindex-chainstate to change -txindex"),
    QT_TRANSLATE_NOOP("anime-core", "(default: %u)"),
    QT_TRANSLATE_NOOP("anime-core", "<category> can be:"),
    QT_TRANSLATE_NOOP("anime-core", "Accept command line and JSON-RPC commands"),
    QT_TRANSLATE_NOOP("anime-core", "Accept connections from outside (default: 1 if no -proxy or -connect)"),
    QT_TRANSLATE_NOOP("anime-core", "Accept public REST requests (default: %u)"),
    QT_TRANSLATE_NOOP("anime-core", "Add a node to connect to and attempt to keep the connection open"),
    QT_TRANSLATE_NOOP("anime-core", "Add address-based output to TX"),
    QT_TRANSLATE_NOOP("anime-core", "Add input to TX"),
    QT_TRANSLATE_NOOP("anime-core", "Add raw script output to TX"),
    QT_TRANSLATE_NOOP("anime-core", "Add zero or more signatures to transaction"),
    QT_TRANSLATE_NOOP("anime-core", "Allow DNS lookups for -addnode, -seednode and -connect"),
    QT_TRANSLATE_NOOP("anime-core", "Always query for peer addresses via DNS lookup (default: %u)"),
    QT_TRANSLATE_NOOP("anime-core", "Animecoin Daemon"),
    QT_TRANSLATE_NOOP("anime-core", "Animecoin RPC client version"),
    QT_TRANSLATE_NOOP("anime-core", "Animecoin animecoin-tx utility version"),
    QT_TRANSLATE_NOOP("anime-core", "Automatically create Tor hidden service (default: %d)"),
    QT_TRANSLATE_NOOP("anime-core", "Block creation options:"),
    QT_TRANSLATE_NOOP("anime-core", "Cannot resolve -bind address: '%s'"),
    QT_TRANSLATE_NOOP("anime-core", "Cannot resolve -externalip address: '%s'"),
    QT_TRANSLATE_NOOP("anime-core", "Cannot resolve -whitebind address: '%s'"),
    QT_TRANSLATE_NOOP("anime-core", "Chain selection options:"),
    QT_TRANSLATE_NOOP("anime-core", "Commands:"),
    QT_TRANSLATE_NOOP("anime-core", "Connect only to the specified node(s)"),
    QT_TRANSLATE_NOOP("anime-core", "Connect through SOCKS5 proxy"),
    QT_TRANSLATE_NOOP("anime-core", "Connect to JSON-RPC on <port> (default: %u or testnet: %u)"),
    QT_TRANSLATE_NOOP("anime-core", "Connect to a node to retrieve peer addresses, and disconnect"),
    QT_TRANSLATE_NOOP("anime-core", "Connection options:"),
    QT_TRANSLATE_NOOP("anime-core", "Copyright (C) 2009-%i The Bitcoin and Anime Developers"),
    QT_TRANSLATE_NOOP("anime-core", "Corrupted block database detected"),
    QT_TRANSLATE_NOOP("anime-core", "Create hex-encoded animecoin transaction"),
    QT_TRANSLATE_NOOP("anime-core", "Create new, empty TX."),
    QT_TRANSLATE_NOOP("anime-core", "Debugging/Testing options:"),
    QT_TRANSLATE_NOOP("anime-core", "Delete input N from TX"),
    QT_TRANSLATE_NOOP("anime-core", "Delete output N from TX"),
    QT_TRANSLATE_NOOP("anime-core", "Do you want to rebuild the block database now?"),
    QT_TRANSLATE_NOOP("anime-core", "Done loading"),
    QT_TRANSLATE_NOOP("anime-core", "Enable publish hash block in <address>"),
    QT_TRANSLATE_NOOP("anime-core", "Enable publish hash transaction in <address>"),
    QT_TRANSLATE_NOOP("anime-core", "Enable publish raw block in <address>"),
    QT_TRANSLATE_NOOP("anime-core", "Enable publish raw transaction in <address>"),
    QT_TRANSLATE_NOOP("anime-core", "Error initializing block database"),
    QT_TRANSLATE_NOOP("anime-core", "Error loading block database"),
    QT_TRANSLATE_NOOP("anime-core", "Error opening block database"),
    QT_TRANSLATE_NOOP("anime-core", "Error reading from database, shutting down."),
    QT_TRANSLATE_NOOP("anime-core", "Error"),
    QT_TRANSLATE_NOOP("anime-core", "Error: -maxmempool must be at least %d MB"),
    QT_TRANSLATE_NOOP("anime-core", "Error: A fatal internal error occured, see debug.log for details"),
    QT_TRANSLATE_NOOP("anime-core", "Error: A fatal internal error occurred, see debug.log for details"),
    QT_TRANSLATE_NOOP("anime-core", "Error: Disk space is low!"),
    QT_TRANSLATE_NOOP("anime-core", "Error: Unsupported argument -tor found, use -onion."),
    QT_TRANSLATE_NOOP("anime-core", "Failed to listen on any port. Use -listen=0 if you want this."),
    QT_TRANSLATE_NOOP("anime-core", "Generate coins (default: %u)"),
    QT_TRANSLATE_NOOP("anime-core", "Get help for a command"),
    QT_TRANSLATE_NOOP("anime-core", "How many blocks to check at startup (default: %u, 0 = all)"),
    QT_TRANSLATE_NOOP("anime-core", "If <category> is not supplied, output all debugging information."),
    QT_TRANSLATE_NOOP("anime-core", "Imports blocks from external blk000??.dat file"),
    QT_TRANSLATE_NOOP("anime-core", "Include IP addresses in debug output (default: %u)"),
    QT_TRANSLATE_NOOP("anime-core", "Incorrect or no genesis block found. Wrong datadir for network?"),
    QT_TRANSLATE_NOOP("anime-core", "Information"),
    QT_TRANSLATE_NOOP("anime-core", "Initialization sanity check failed. Animecoin is shutting down."),
    QT_TRANSLATE_NOOP("anime-core", "Invalid -onion address: '%s'"),
    QT_TRANSLATE_NOOP("anime-core", "Invalid -proxy address: '%s'"),
    QT_TRANSLATE_NOOP("anime-core", "Invalid amount for -minrelaytxfee=<amount>: '%s'"),
    QT_TRANSLATE_NOOP("anime-core", "Invalid netmask specified in -whitelist: '%s'"),
    QT_TRANSLATE_NOOP("anime-core", "Keep at most <n> unconnectable transactions in memory (default: %u)"),
    QT_TRANSLATE_NOOP("anime-core", "Keep the transaction memory pool below <n> megabytes (default: %u)"),
    QT_TRANSLATE_NOOP("anime-core", "List commands"),
    QT_TRANSLATE_NOOP("anime-core", "Listen for JSON-RPC connections on <port> (default: %u or testnet: %u)"),
    QT_TRANSLATE_NOOP("anime-core", "Listen for connections on <port> (default: %u or testnet: %u)"),
    QT_TRANSLATE_NOOP("anime-core", "Load JSON file FILENAME into register NAME"),
    QT_TRANSLATE_NOOP("anime-core", "Loading addresses..."),
    QT_TRANSLATE_NOOP("anime-core", "Loading banlist..."),
    QT_TRANSLATE_NOOP("anime-core", "Loading block index..."),
    QT_TRANSLATE_NOOP("anime-core", "Maintain at most <n> connections to peers (default: %u)"),
    QT_TRANSLATE_NOOP("anime-core", "Maximum per-connection receive buffer, <n>*1000 bytes (default: %u)"),
    QT_TRANSLATE_NOOP("anime-core", "Maximum per-connection send buffer, <n>*1000 bytes (default: %u)"),
    QT_TRANSLATE_NOOP("anime-core", "Minimum bytes per sigop in transactions we relay and mine (default: %u)"),
    QT_TRANSLATE_NOOP("anime-core", "Need to specify a port with -whitebind: '%s'"),
    QT_TRANSLATE_NOOP("anime-core", "Node relay options:"),
    QT_TRANSLATE_NOOP("anime-core", "Not enough file descriptors available."),
    QT_TRANSLATE_NOOP("anime-core", "Only connect to nodes in network <net> (ipv4, ipv6 or onion)"),
    QT_TRANSLATE_NOOP("anime-core", "Options:"),
    QT_TRANSLATE_NOOP("anime-core", "Password for JSON-RPC connections"),
    QT_TRANSLATE_NOOP("anime-core", "Prepend debug output with timestamp (default: %u)"),
    QT_TRANSLATE_NOOP("anime-core", "Prune cannot be configured with a negative value."),
    QT_TRANSLATE_NOOP("anime-core", "Prune mode is incompatible with -txindex."),
    QT_TRANSLATE_NOOP("anime-core", "Pruning blockstore..."),
    QT_TRANSLATE_NOOP("anime-core", "RPC server options:"),
    QT_TRANSLATE_NOOP("anime-core", "Rebuild chain state and block index from the blk*.dat files on disk"),
    QT_TRANSLATE_NOOP("anime-core", "Rebuild chain state from the currently indexed blocks"),
    QT_TRANSLATE_NOOP("anime-core", "Receive and display P2P network alerts (default: %u)"),
    QT_TRANSLATE_NOOP("anime-core", "Reducing -maxconnections from %d to %d, because of system limitations."),
    QT_TRANSLATE_NOOP("anime-core", "Register Commands:"),
    QT_TRANSLATE_NOOP("anime-core", "Relay and mine data carrier transactions (default: %u)"),
    QT_TRANSLATE_NOOP("anime-core", "Relay non-P2SH multisig (default: %u)"),
    QT_TRANSLATE_NOOP("anime-core", "Run in the background as a daemon and accept commands"),
    QT_TRANSLATE_NOOP("anime-core", "See signrawtransaction docs for format of sighash flags, JSON objects."),
    QT_TRANSLATE_NOOP("anime-core", "Select JSON output"),
    QT_TRANSLATE_NOOP("anime-core", "Send command to Animecoin"),
    QT_TRANSLATE_NOOP("anime-core", "Send commands to node running on <ip> (default: %s)"),
    QT_TRANSLATE_NOOP("anime-core", "Send trace/debug info to console instead of debug.log file"),
    QT_TRANSLATE_NOOP("anime-core", "Set TX lock time to N"),
    QT_TRANSLATE_NOOP("anime-core", "Set TX version to N"),
    QT_TRANSLATE_NOOP("anime-core", "Set database cache size in megabytes (%d to %d, default: %d)"),
    QT_TRANSLATE_NOOP("anime-core", "Set maximum block size in bytes (default: %d)"),
    QT_TRANSLATE_NOOP("anime-core", "Set minimum block size in bytes (default: %u)"),
    QT_TRANSLATE_NOOP("anime-core", "Set register NAME to given JSON-STRING"),
    QT_TRANSLATE_NOOP("anime-core", "Set the number of threads to service RPC calls (default: %d)"),
    QT_TRANSLATE_NOOP("anime-core", "Show all debugging options (usage: --help -help-debug)"),
    QT_TRANSLATE_NOOP("anime-core", "Shrink debug.log file on client startup (default: 1 when no -debug)"),
    QT_TRANSLATE_NOOP("anime-core", "Specify configuration file (default: %s)"),
    QT_TRANSLATE_NOOP("anime-core", "Specify connection timeout in milliseconds (minimum: 1, default: %d)"),
    QT_TRANSLATE_NOOP("anime-core", "Specify data directory"),
    QT_TRANSLATE_NOOP("anime-core", "Specify pid file (default: %s)"),
    QT_TRANSLATE_NOOP("anime-core", "Specify your own public address"),
    QT_TRANSLATE_NOOP("anime-core", "Start Animecoin Daemon"),
    QT_TRANSLATE_NOOP("anime-core", "Starting network threads..."),
    QT_TRANSLATE_NOOP("anime-core", "This command requires JSON registers:"),
    QT_TRANSLATE_NOOP("anime-core", "This help message"),
    QT_TRANSLATE_NOOP("anime-core", "This is experimental software."),
    QT_TRANSLATE_NOOP("anime-core", "Threshold for disconnecting misbehaving peers (default: %u)"),
    QT_TRANSLATE_NOOP("anime-core", "Timeout during HTTP requests (default: %d)"),
    QT_TRANSLATE_NOOP("anime-core", "Tor control port password (default: empty)"),
    QT_TRANSLATE_NOOP("anime-core", "Tor control port to use if onion listening enabled (default: %s)"),
    QT_TRANSLATE_NOOP("anime-core", "Unable to bind to %s on this computer (bind returned error %s)"),
    QT_TRANSLATE_NOOP("anime-core", "Unable to start HTTP server. See debug log for details."),
    QT_TRANSLATE_NOOP("anime-core", "Unknown network specified in -onlynet: '%s'"),
    QT_TRANSLATE_NOOP("anime-core", "Update hex-encoded animecoin transaction"),
    QT_TRANSLATE_NOOP("anime-core", "Usage:"),
    QT_TRANSLATE_NOOP("anime-core", "Use UPnP to map the listening port (default: %u)"),
    QT_TRANSLATE_NOOP("anime-core", "Use the test chain"),
    QT_TRANSLATE_NOOP("anime-core", "Username for JSON-RPC connections"),
    QT_TRANSLATE_NOOP("anime-core", "Verifying blocks..."),
    QT_TRANSLATE_NOOP("anime-core", "Wait for RPC server to start"),
    QT_TRANSLATE_NOOP("anime-core", "Warning"),
    QT_TRANSLATE_NOOP("anime-core", "Warning: This version is obsolete, upgrade required!"),
    QT_TRANSLATE_NOOP("anime-core", "Warning: Unsupported argument -benchmark ignored, use -debug=bench."),
    QT_TRANSLATE_NOOP("anime-core", "Warning: Unsupported argument -debugnet ignored, use -debug=net."),
    QT_TRANSLATE_NOOP("anime-core", "Whether to operate in a blocks only mode (default: %u)"),
    QT_TRANSLATE_NOOP("anime-core", "ZeroMQ notification options:"),
    QT_TRANSLATE_NOOP("anime-core", "on startup"),
    QT_TRANSLATE_NOOP("anime-core", "prevtxs=JSON object"),
    QT_TRANSLATE_NOOP("anime-core", "privatekeys=JSON object"),
    QT_TRANSLATE_NOOP("anime-core", "version"),
};
